@using Dashy.Net.Shared.Models
@using Dashy.Net.Web.Services
@using System.ComponentModel.DataAnnotations
@inject WidgetRegistryService WidgetRegistry

<EditForm Model="EditModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="title">Title</label>
        <InputText id="title" class="form-control" @bind-Value="EditModel.Title" />
        <ValidationMessage For="@(() => EditModel.Title)" />
    </div>

    <hr />

    @if (_editorComponentType is not null)
    {
        <p class="subtle-text" style="margin-bottom: 1rem;">Widget-Specific Options:</p>
        <DynamicComponent Type="_editorComponentType" Parameters="_editorParameters" />
    }
    else
    {
        <p class="subtle-text">This widget type has no specific options to configure.</p>
    }

    <div class="form-actions">
        <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
        <button type="submit" class="btn btn-primary">Save</button>
    </div>
</EditForm>

@code {
    [Parameter, EditorRequired]
    public ItemEditModel EditModel { get; set; } = default!;

    [Parameter]
    public EventCallback<ItemEditModel> OnSave { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    private Type? _editorComponentType;
    private Dictionary<string, object> _editorParameters = new();

    protected override void OnParametersSet()
    {
        var descriptor = WidgetRegistry.GetDescriptor(EditModel.Widget);
        _editorComponentType = descriptor?.OptionsEditorComponent;

        if (_editorComponentType is not null)
        {
            _editorParameters = new Dictionary<string, object>
            {
                { "EditModel", EditModel }
            };
        }
    }

    private async Task HandleValidSubmit()
    {
        await OnSave.InvokeAsync(EditModel);
    }

    private async Task Cancel()
    {
        await OnCancel.InvokeAsync();
    }
}