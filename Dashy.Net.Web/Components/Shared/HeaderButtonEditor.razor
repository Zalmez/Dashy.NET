@using Dashy.Net.Shared.Models
@using System.ComponentModel.DataAnnotations

<EditForm Model="EditModel" OnValidSubmit="HandleSave">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="btn-text">Text</label>
        <InputText id="btn-text" class="form-control" @bind-Value="EditModel.Text" />
        <ValidationMessage For="@(() => EditModel.Text)" />
    </div>

    <div class="form-group">
        <label for="btn-url">URL</label>
        <InputText id="btn-url" class="form-control" @bind-Value="EditModel.Url" />
    </div>

    <div class="form-group">
        <label for="btn-icon">Icon (e.g., 'fas fa-rocket')</label>
        <InputText id="btn-icon" class="form-control" @bind-Value="EditModel.Icon" />
    </div>

    <div class="form-actions">
        <button type="button" class="btn btn-secondary" @onclick="OnCancel">Cancel</button>
        <button type="submit" class="btn btn-primary">Save Button</button>
    </div>
</EditForm>

@code {
    // This component uses a mutable class for two-way binding
    public class ButtonEditModel
    {
        [Required]
        public string Text { get; set; } = "";
        public string? Url { get; set; }
        public string? Icon { get; set; }
    }

    [Parameter, EditorRequired]
    public ButtonEditModel EditModel { get; set; } = default!;

    [Parameter]
    public EventCallback<ButtonEditModel> OnSave { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    private async Task HandleSave()
    {
        await OnSave.InvokeAsync(EditModel);
    }
}