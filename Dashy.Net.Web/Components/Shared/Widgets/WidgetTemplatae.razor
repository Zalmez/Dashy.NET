@inherits WidgetBase
@inject IJSRuntime JSRuntime
@inject ILogger<WidgetTemplatae> Logger // Change WidgetTemplatae to the actual widget name
@inject NavigationManager NavManager

<div class="item-card-wrapper">
    @if (ViewOptions.IsEditMode)
    {
        <div class="item-edit-controls">
            <button class="edit-btn" title="Edit Item" @onclick="OnEditClick"><i class="fas fa-pencil-alt"></i></button>
            <button class="delete-btn" title="Delete Item" @onclick="OnDeleteClick"><i
                    class="fas fa-trash-alt"></i></button>
        </div>
    }

    <div class="item-card">
        <!--General item card stuff like icons,title etc-->
        <div class="item-details">
            <!--Item content-->
        </div>
    </div>
</div>

@code {

    private string? SOMEVALUE => GetOption("SOMEOPTION"); //Remember to update Dashy.Net.Shared/models/ItemEditModel.cs to add new options

    private async Task OnDeleteClick()
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete '{Item.Title}'?");
        if (IsDisposed) return;
        if (confirmed)
        {
            await OnItemDeleted.InvokeAsync(Item);
        }
    }

    private async Task OnEditClick()
    {
        await OnItemEdited.InvokeAsync();
    }
}